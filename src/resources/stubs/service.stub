<?php

namespace App\Http\services;


use Exception;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Hash;
use App\Models\{{modelName}};
use App\Http\Resource\{{modelName}}Resource;

class {{modelName}}Service
{

     static function display{{modelName}}()
    {
         ${{modelNamePluralLowerCase}} = {{modelName}}::latest()->get();

        $empty{{modelName}} = ${{modelNamePluralLowerCase}}->count() === 0;

        $response = [
            'message' => !$empty{{modelName}} ? 'la Liste des {{modelName}} a été recupées avec succès' : 'La liste de {{modelName}} est vide',
            'data' => !$empty{{modelName}} ? ${{modelNamePluralLowerCase}} : []
        ];

        return response($response);
    }


    static function create{{modelName}}($data)
    {
        
        try {
            ${{modelNameSingularLowerCase}} = {{modelName}}::create($data);
        } catch(Exception $ex) {
            Log::info("Problem lors de la creation d'une {{modelName}}: ". json_encode($data));
            Log::error($ex->getMessage());

            return response(['message' => 'Un problème est survenu lors de la création de la {{modelName}}.'], 500);
        }

        $response = [
            'message' => 'La {{modelName}} à été créé avec succèss',
            'data' => ${{modelNameSingularLowerCase}}
        ];

        return response($response, 201);

    }

    static function show{{modelName}}($data)
    {
         ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($data);

        return response(['data', ${{modelNameSingularLowerCase}} ], 200);
    }

    static function update{{modelName}}($data,$id)
    {
        try {
            ${{modelNameSingularLowerCase}} = {{modelName}}::findOrFail($id);
            ${{modelNameSingularLowerCase}}->update($data);
        } catch(Exception $ex) {
            Log::info("Problem lors de la lors du mise à jour d'une {{modelName}}: ". json_encode($data));
            Log::error($ex->getMessage());

            return response(['message' => 'Un problème est survenu lors du mise à jour de la {{modelName}}.'], 500);
        }


        $response = [
            'message' => 'La {{modelName}} à été modifié avec succèss',
            'data' => ${{modelNameSingularLowerCase}}
        ];

        return response($response);
    }

    static function delete{{modelName}}($id)
    {
         {{modelName}}::destroy($id);

        return response(['data' => null ], 204);
    }
}
